# Generated by Django 5.2.5 on 2025-09-06 05:01

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to='documents/')),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, choices=[('Student', 'Student'), ('University', 'University'), ('Institute', 'Institute'), ('Independent', 'Independent')], max_length=50, null=True)),
                ('research_type', models.CharField(blank=True, choices=[('Environment & Marine', 'Environment & Marine'), ('Aquatic Organisms', 'Aquatic Organisms'), ('Fisheries Research', 'Fisheries Research')], max_length=100, null=True)),
                ('role', models.CharField(choices=[('Admin', 'Admin'), ('Officer', 'Officer'), ('Researcher', 'Researcher')], default='Researcher', max_length=20)),
                ('institution', models.CharField(blank=True, max_length=200, null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('position', models.CharField(blank=True, max_length=100, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('profile_completion', models.IntegerField(default=0)),
                ('first_login', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='myapp_user_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='myapp_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('category', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Draft', max_length=20)),
                ('officer_feedback', models.TextField(blank=True, null=True)),
                ('submitted', models.CharField(blank=True, max_length=100, null=True)),
                ('important', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('researcher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_number', models.CharField(max_length=50)),
                ('file_path', models.FileField(upload_to='certificates/')),
                ('issued_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='certificate', to='myapp.application')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('Read', 'Read'), ('Unread', 'Unread')], default='Unread', max_length=10)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('research_type', models.CharField(choices=[('Environment & Marine', 'Environment & Marine'), ('Aquatic Organisms', 'Aquatic Organisms'), ('Fisheries Research', 'Fisheries Research')], default='Environment & Marine', max_length=100)),
                ('year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2030)])),
                ('control_number', models.CharField(blank=True, max_length=12, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Verified', 'Verified'), ('Expired', 'Expired')], max_length=20)),
                ('expiry_date', models.DateTimeField()),
                ('used_for_application', models.BooleanField(default=False)),
                ('generated_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('application', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='payment_record', to='myapp.application')),
                ('researcher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ResearcherProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('institution', models.CharField(max_length=255)),
                ('department', models.CharField(max_length=255)),
                ('position', models.CharField(max_length=255)),
                ('contact_number', models.CharField(max_length=50)),
                ('gender', models.CharField(choices=[('Female', 'Female'), ('Male', 'Male'), ('Other', 'Other')], max_length=10)),
                ('research_interests', models.JSONField(default=list)),
                ('bio', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_type', models.CharField(choices=[('Makamu Form', 'Makamu Form'), ('Proposal', 'Proposal'), ('Ethical Form', 'Ethical Form')], max_length=50)),
                ('file_path', models.FileField(upload_to='attachments/%Y/%m/')),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('original_filename', models.CharField(default='unknown', max_length=255)),
                ('file_size', models.PositiveIntegerField(default=0)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='myapp.application')),
            ],
            options={
                'ordering': ['file_type'],
                'unique_together': {('application', 'file_type')},
            },
        ),
    ]
